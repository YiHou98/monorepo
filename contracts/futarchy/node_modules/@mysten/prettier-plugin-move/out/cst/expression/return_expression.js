"use strict";
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0
Object.defineProperty(exports, "__esModule", { value: true });
exports.NODE_TYPE = void 0;
exports.default = default_1;
const prettier_1 = require("prettier");
const { join, indent } = prettier_1.doc.builders;
/** The type of the node implemented in this file */
exports.NODE_TYPE = 'return_expression';
function default_1(path) {
    if (path.node.type === exports.NODE_TYPE) {
        return printReturnExpression;
    }
    return null;
}
/**
 * Print `return_expression` node.
 */
function printReturnExpression(path, options, print) {
    const nodes = path.node.nonFormattingChildren;
    if (nodes.length === 0) {
        return 'return';
    }
    // either label or expression
    if (nodes.length === 1) {
        const expression = nodes[0];
        const printed = path.call(print, 'nonFormattingChildren', 0);
        return ['return ', expression.isBreakableExpression ? printed : indent(printed)];
    }
    // labeled expression
    if (nodes.length === 2) {
        const expression = nodes[1];
        const printedLabel = path.call(print, 'nonFormattingChildren', 0);
        const printedExpression = path.call(print, 'nonFormattingChildren', 1);
        return join(' ', [
            'return',
            printedLabel,
            expression.isBreakableExpression ? printedExpression : indent(printedExpression),
        ]);
    }
    throw new Error('Invalid return expression');
}
//# sourceMappingURL=return_expression.js.map